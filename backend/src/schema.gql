# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PostLike {
  id: String!
  created_at: DateTime!
  userId: String!
  postId: String!
  user: User!
  post: Post!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ReferencedPost {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  postId: String!
  albumId: String!
  userId: String!
  user: User!
  album: Album!
  post: Post!
}

type Post {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  description: String
  userId: String!
  referenced: [ReferencedPost!]!
  albumId: String!
  user: User!
  album: Album!
  comments: [Comment!]!
  likes: [PostLike!]!
  image_url: String!
}

type AlbumMember {
  id: String!
  isAdmin: Boolean!
  albumId: String!
  userId: String!
  album: Album!
  user: User!
  created_at: DateTime!
  updated_at: DateTime!
}

type AlbumFollow {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  followerId: String!
  albumId: String!
  follower: User!
  album: Album!
}

type Album {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  members: [AlbumMember!]!
  userId: String!
  user: User!
  posts: [Post!]!
  followers: [AlbumFollow!]!
  referencedPosts: [ReferencedPost!]!
  title: String!
  description: String
}

type UserFollow {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  followerId: String!
  followingId: String!
  follower: User!
  following: User!
}

type User {
  id: String!
  posts: [Post!]
  referencedPosts: [ReferencedPost!]
  albums: [Album!]
  comments: [Comment!]
  likes: [PostLike!]
  followers: [UserFollow!]
  usersFollowing: [UserFollow!]
  albumsFollowing: [AlbumFollow!]
  albumMemberships: [AlbumMember!]
  username: String!
  password: String
  created_at: DateTime!
  updated_at: DateTime!
}

type CommentLike {
  id: String!
  created_at: DateTime!
  userId: String!
  commentId: String!
  user: User!
  comment: Comment!
  post: Comment!
}

type Comment {
  id: String!
  created_at: DateTime!
  updated_at: DateTime!
  content: String!
  userId: String!
  postId: String!
  user: User!
  post: Post!
  likes: [CommentLike!]!
}

type LoginResponse {
  user: User!
}

type Query {
  users: [User!]!
  getUser(query: String!, type: String = "id"): User!

  """Get albums by ID"""
  albums: [Album!]!

  """Get album by ID"""
  getAlbum(id: String!): Album!
  albumMembers: [AlbumMember!]!
  getAlbumMember(query: String!): AlbumMember!
  getPost(id: String!): Post!
  posts: [Post!]!
  albumFollows: [AlbumFollow!]!
  findAlbumFollowers(albumId: String!): [AlbumFollow!]!
  findAlbumFollowing(userId: String!): [AlbumFollow!]!
  comments: [Comment!]!
  getComment(id: String!): Comment!
  userFollows: [UserFollow!]!
  findUserFollowers(userId: String!): [UserFollow!]!
  findUserFollowing(userId: String!): [UserFollow!]!
  postLikes: [PostLike!]!
  referencedPosts: [ReferencedPost!]!
  referencedPost(albumId: String!): ReferencedPost!
  commentLikes: [CommentLike!]!
  getSomething: LoginResponse!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  createAlbum(createAlbumInput: CreateAlbumInput!): Album!
  deleteAlbum(albumId: String!): Boolean!
  createAlbumMember(createAlbumMember: CreateAlbumMemberInput!): AlbumMember!
  createPost(createPostInput: CreatePostInput!): Post!
  referencePostInAlbum(albumId: String!, postId: String!): Post!
  createAlbumFollow(createFollowInput: CreateAlbumFollowInput!): AlbumFollow!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createUserFollow(createUserFollowInput: CreateUserFollowInput!): UserFollow!
  createLike(createLikeInput: CreateLikeInput!): PostLike!
  createReferencedPost(createReferencedPostInput: CreateReferencedPostInput!): ReferencedPost!
  createCommentLike(createCommentLikeInput: CreateCommentLikeInput!): CommentLike!
  login(loginUserInput: LoginUserInput!): LoginResponse!
}

input CreateUserInput {
  username: String!
  password: String!
}

input CreateAlbumInput {
  title: String!
  description: String
}

input CreateAlbumMemberInput {
  userId: String!
  albumId: String!
  isAdmin: Boolean = false
}

input CreatePostInput {
  description: String
  albumId: String!
  image_url: String!
}

input CreateAlbumFollowInput {
  albumId: String!
}

input CreateCommentInput {
  postId: String!
  content: String!
}

input CreateUserFollowInput {
  followingId: String!
}

input CreateLikeInput {
  postId: String!
}

input CreateReferencedPostInput {
  postId: String!
  albumId: String!
}

input CreateCommentLikeInput {
  commentId: String!
}

input LoginUserInput {
  username: String!
  password: String!
}